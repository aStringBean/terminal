<!--
    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
    the MIT License. See LICENSE in the project root for license information.
-->
<Page x:Class="Microsoft.Terminal.Settings.Editor.Profiles_Base"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:Microsoft.Terminal.Settings.Editor"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:model="using:Microsoft.Terminal.Settings.Model"
      xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
      mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ProfilesBaseToggleButtonStyle"
                   TargetType="ToggleButton">
                <Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}" />
                <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
                <Setter Property="MinHeight" Value="64" />
                <Setter Property="BorderThickness" Value="{ThemeResource ExpanderHeaderBorderThickness}" />
                <Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
                <Setter Property="Padding" Value="16,0,8,0" />
                <Setter Property="Margin" Value="0,4,8,0" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <!--  Use a Grid instead of a StackPanel. StackPanel suppresses the inner ScrollViewer.  -->
    <Grid>
        <ScrollViewer ViewChanging="ViewChanging">
            <StackPanel Style="{StaticResource PivotStackStyle}"
                        Margin="13,0,0,0">

                    <!--  Name  -->
                    <!--
                            NOTE: Has/Clear is not bound because we don't want the reset button & override text to appear.
                            Additionally, the JSON stubs generated by auto-generated profiles come with a name,
                            so the name will always be overridden.
                        -->
                    <local:SettingContainer x:Uid="Profile_Name"
                                                CurrentValue="{x:Bind State.Profile.Name, Mode=OneWay}"
                                                Style="{StaticResource ExpanderSettingContainerStyle}"
                                                Visibility="{x:Bind local:Converters.InvertedBooleanToVisibility(State.Profile.IsBaseLayer), Mode=OneWay}">
                        <TextBox Style="{StaticResource TextBoxSettingStyle}"
                                     Text="{x:Bind State.Profile.Name, Mode=TwoWay}" />
                    </local:SettingContainer>

                    <!--  Commandline  -->
                    <local:SettingContainer x:Name="CommandlineContainer"
                                                x:Uid="Profile_Commandline"
                                                ClearSettingValue="{x:Bind State.Profile.ClearCommandline}"
                                                CurrentValue="{x:Bind State.Profile.Commandline, Mode=OneWay}"
                                                HasSettingValue="{x:Bind State.Profile.HasCommandline, Mode=OneWay}"
                                                SettingOverrideSource="{x:Bind State.Profile.CommandlineOverrideSource, Mode=OneWay}"
                                                Style="{StaticResource ExpanderSettingContainerStyle}"
                                                Visibility="{x:Bind local:Converters.InvertedBooleanToVisibility(State.Profile.IsBaseLayer), Mode=OneWay}">
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:Uid="Profile_CommandlineBox"
                                         IsSpellCheckEnabled="False"
                                         Style="{StaticResource TextBoxSettingStyle}"
                                         Text="{x:Bind State.Profile.Commandline, Mode=TwoWay}" />
                            <Button x:Uid="Profile_CommandlineBrowse"
                                        Click="Commandline_Click"
                                        Style="{StaticResource BrowseButtonStyle}" />
                        </StackPanel>
                    </local:SettingContainer>

                    <!--  Starting Directory  -->
                    <local:SettingContainer x:Name="StartingDirectoryContainer"
                                                x:Uid="Profile_StartingDirectory"
                                                ClearSettingValue="{x:Bind State.Profile.ClearStartingDirectory}"
                                                CurrentValue="{x:Bind State.Profile.StartingDirectory, Mode=OneWay}"
                                                HasSettingValue="{x:Bind State.Profile.HasStartingDirectory, Mode=OneWay}"
                                                SettingOverrideSource="{x:Bind State.Profile.StartingDirectoryOverrideSource, Mode=OneWay}"
                                                Style="{StaticResource ExpanderSettingContainerStyle}">
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <TextBox x:Uid="Profile_StartingDirectoryBox"
                                             IsEnabled="{x:Bind State.Profile.UseCustomStartingDirectory, Mode=OneWay}"
                                             IsSpellCheckEnabled="False"
                                             Style="{StaticResource TextBoxSettingStyle}"
                                             Text="{x:Bind State.Profile.StartingDirectory, Mode=TwoWay}" />
                                <Button x:Name="StartingDirectoryBrowse"
                                            x:Uid="Profile_StartingDirectoryBrowse"
                                            Click="StartingDirectory_Click"
                                            IsEnabled="{x:Bind State.Profile.UseCustomStartingDirectory, Mode=OneWay}"
                                            Style="{StaticResource BrowseButtonStyle}" />
                            </StackPanel>
                            <CheckBox x:Name="StartingDirectoryUseParentCheckbox"
                                          x:Uid="Profile_StartingDirectoryUseParentCheckbox"
                                          IsChecked="{x:Bind State.Profile.UseParentProcessDirectory, Mode=TwoWay}" />
                        </StackPanel>
                    </local:SettingContainer>

                    <!--  Icon  -->
                    <local:SettingContainer x:Uid="Profile_Icon"
                                                ClearSettingValue="{x:Bind State.Profile.ClearIcon}"
                                                CurrentValue="{x:Bind State.Profile.Icon, Mode=OneWay}"
                                                HasSettingValue="{x:Bind State.Profile.HasIcon, Mode=OneWay}"
                                                SettingOverrideSource="{x:Bind State.Profile.IconOverrideSource, Mode=OneWay}"
                                                Style="{StaticResource ExpanderSettingContainerStyle}">
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:Uid="Profile_IconBox"
                                         FontFamily="Segoe UI, Segoe MDL2 Assets"
                                         IsSpellCheckEnabled="False"
                                         Style="{StaticResource TextBoxSettingStyle}"
                                         Text="{x:Bind State.Profile.Icon, Mode=TwoWay}" />
                            <Button x:Uid="Profile_IconBrowse"
                                        Click="Icon_Click"
                                        Style="{StaticResource BrowseButtonStyle}" />
                        </StackPanel>
                    </local:SettingContainer>

                    <!--  Tab Title  -->
                    <local:SettingContainer x:Uid="Profile_TabTitle"
                                                ClearSettingValue="{x:Bind State.Profile.ClearTabTitle}"
                                                CurrentValue="{x:Bind State.Profile.TabTitle, Mode=OneWay}"
                                                HasSettingValue="{x:Bind State.Profile.HasTabTitle, Mode=OneWay}"
                                                SettingOverrideSource="{x:Bind State.Profile.TabTitleOverrideSource, Mode=OneWay}"
                                                Style="{StaticResource ExpanderSettingContainerStyle}">
                        <TextBox Style="{StaticResource TextBoxSettingStyle}"
                                     Text="{x:Bind State.Profile.TabTitle, Mode=TwoWay}" />
                    </local:SettingContainer>

                    <!--  Hidden  -->
                <local:SettingContainer x:Uid="Profile_Hidden"
                                                Visibility="{x:Bind local:Converters.InvertedBooleanToVisibility(State.Profile.IsBaseLayer), Mode=OneWay}">
                    <ToggleSwitch IsOn="{x:Bind State.Profile.Hidden, Mode=TwoWay}" />
                </local:SettingContainer>

                <ToggleButton Style="{StaticResource ProfilesBaseToggleButtonStyle}"
                              Click="Appearance_Click">
                    <TextBlock Text="Appearance"
                           HorizontalAlignment="Left"
                                   VerticalAlignment="Center"/>
                </ToggleButton>
                <ToggleButton
                          Style="{StaticResource ProfilesBaseToggleButtonStyle}"
                          Click="Advanced_Click">
                    <ContentPresenter HorizontalAlignment="Left">
                        <TextBlock Text="Advanced"
                               HorizontalAlignment="Left"/>
                    </ContentPresenter>
                </ToggleButton>
                <!--  Delete Button  -->
                <Button x:Name="DeleteButton"
                                Margin="{StaticResource StandardControlMargin}"
                                Style="{StaticResource DeleteButtonStyle}"
                                Visibility="{x:Bind State.Profile.CanDeleteProfile}">
                    <Button.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.ThemeDictionaries>
                                <ResourceDictionary x:Key="Light">
                                    <SolidColorBrush x:Key="ButtonBackground"
                                                             Color="Firebrick" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver"
                                                             Color="#C23232" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed"
                                                             Color="#A21212" />
                                    <SolidColorBrush x:Key="ButtonForeground"
                                                             Color="White" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver"
                                                             Color="White" />
                                    <SolidColorBrush x:Key="ButtonForegroundPressed"
                                                             Color="White" />
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="Dark">
                                    <SolidColorBrush x:Key="ButtonBackground"
                                                             Color="Firebrick" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver"
                                                             Color="#C23232" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed"
                                                             Color="#A21212" />
                                    <SolidColorBrush x:Key="ButtonForeground"
                                                             Color="White" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver"
                                                             Color="White" />
                                    <SolidColorBrush x:Key="ButtonForegroundPressed"
                                                             Color="White" />
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="HighContrast">
                                    <SolidColorBrush x:Key="ButtonBackground"
                                                             Color="{ThemeResource SystemColorButtonFaceColor}" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver"
                                                             Color="{ThemeResource SystemColorHighlightColor}" />
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed"
                                                             Color="{ThemeResource SystemColorHighlightColor}" />
                                    <SolidColorBrush x:Key="ButtonForeground"
                                                             Color="{ThemeResource SystemColorButtonTextColor}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPointerOver"
                                                             Color="{ThemeResource SystemColorHighlightTextColor}" />
                                    <SolidColorBrush x:Key="ButtonForegroundPressed"
                                                             Color="{ThemeResource SystemColorHighlightTextColor}" />
                                </ResourceDictionary>
                            </ResourceDictionary.ThemeDictionaries>
                        </ResourceDictionary>
                    </Button.Resources>
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon FontSize="{StaticResource StandardIconSize}"
                                              Glyph="&#xE74D;" />
                            <TextBlock x:Uid="Profile_DeleteButton"
                                               Margin="10,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <TextBlock x:Uid="Profile_DeleteConfirmationMessage"
                                                   Style="{StaticResource CustomFlyoutTextStyle}" />
                                <Button x:Uid="Profile_DeleteConfirmationButton"
                                                Click="DeleteConfirmation_Click" />
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
